# -*- mode: snippet -*-
# -*- junction table for many-to-many mapping. A sequential ID is used becuase
# sometimes the juntion is more than a mere implementaiton detail of a
# many-to-many. It may be an entity in its own right with extra fields and
# other tables referencing it via FK. Double unique keys are created for both
# directions of the mapping so you're covered no matter which field is used
# in a join. -*-
# name: tabj
# key: tabj
# expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
# --
create table ${1:dbo}.${2:/*Tab*/} (
    id int identity(1,1) not null,
    ${3:ID_1} ${4:int} not null,
    ${5:ID_3} ${6:int} not null,

    CONSTRAINT PK_$2 primary key clustered (id asc)
);
alter table $1.$2 add constraint UK_$2_$3_$5 unique ($3, $5);
alter table $1.$2 add constraint UK_$2_$5_$3 unique ($5, $3);
alter table $1.$2 with check add constraint FK_$2_$3
    foreign key($3) references ${7:dbo}.${8:/*Tab1*/}(${9:/*ID_1*/});
alter table $1.$2 check constraint FK_$2_$3;
alter table $1.$2 with check add constraint FK_$2_$5
    foreign key($5) references ${10:dbo}.${11:/*Tab3*/}(${12:/*ID_3*/});
alter table $1.$2 check constraint FK_$2_$5;
$0