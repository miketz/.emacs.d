# -*- mode: snippet -*-
# -*- junction table for many-to-many mapping. A sequential ID is used becuase
# sometimes the juntion is more than a mere implementaiton detail of a
# many-to-many. It may be an entity in its own right with extra fields and
# other tables referencing it via FK. Double unique keys are created for both
# directions of the mapping so you're covered no matter which field is used
# in a join. -*-
# name: tabjg
# key: tabjg
# expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
# --
if object_id('$1.$2', 'U') is null
begin
    create table ${1:dbo}.${2:/*Tab*/} (
        id bigint identity(1,1) not null,
        ${3:ID_1} ${4:bigint} not null,
        ${5:ID_3} ${6:bigint} not null,

        CONSTRAINT PK_$2 primary key clustered (id asc)
    );
    alter table $2 add constraint UK_$2_$3_$5 unique ($3, $5);
    alter table $2 add constraint UK_$2_$5_$3 unique ($5, $3);
    alter table $2 with check add constraint FK_$2_$3
        foreign key($3) references ${7:/*Tab1*/}(${8:/*ID_1*/});
    alter table $2 check constraint FK_$2_$3;
    alter table $2 with check add constraint FK_$2_$5
        foreign key($5) references ${9:/*Tab3*/}(${10:/*ID_3*/});
    alter table $2 check constraint FK_$2_$5;
end
$0